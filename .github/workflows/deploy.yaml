name: Deploy Swagger UI to GitHub Pages

on:
  push:
    branches:
      - 'api-doc-*'   # コミットpush時にもデプロイ
  pull_request:
    branches:
      - 'api-doc-*'   # PR作成/更新時にもデプロイ

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1) リポジトリのチェックアウト
      - name: Check out
        uses: actions/checkout@v3

      # 2) 必要に応じて npm install など
      # - name: Install dependencies
      #   run: npm install

      # 3) ブランチ名を取得
      - name: Get branch name
        id: get_branch
        run: echo "BRANCH_NAME=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT

      # 4) gh-pagesブランチにデプロイ
      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          publish_branch: gh-pages
          destination_dir: ${{ steps.get_branch.outputs.BRANCH_NAME }}

      # 5) (追加) PR本文の先頭に GitHub PagesのURLを貼り付けるステップ
      - name: Prepend GitHub Pages URL to PR body
        # pull_request イベント時のみ動かす
        uses: actions/github-script@v6
        with:
          script: |
            // 1) ブランチ名からURLを組み立てる
            const branchName = "${{ steps.get_branch.outputs.BRANCH_NAME }}";
            const pagesUrl = `https://<GitHubユーザー名>.github.io/<リポジトリ名>/${branchName}/index.html`;

            // 2) PR情報を取得
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            // 3) すでに本文中に同じURLが存在するか確認
            if (!pr.body.includes(pagesUrl)) {
              // 4) 先頭にURLを追記 (改行を挟む)
              const updatedBody = `${pagesUrl}\n\n${pr.body || ''}`; 
              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                body: updatedBody
              });
            }
